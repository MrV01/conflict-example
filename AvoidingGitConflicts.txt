TIPS regarding Avoiding Conflicts in GIT.

1. Run the "git pull" command often.
        To avoid painful long merge sessions,
        by the finish of long complex branch development.
2. Communicate with you team.
          which file(s) and feature(s) are modified/developed
          by whom?
3. Standardize white space settings in text-editors.

4. Think of "git merge" as a two way street.
      Team members continue to work with master brunch while
      you are working with you own particular branch.
      Keep local master and other branches synchronized,
      to make final merge quick and easy :-)

===================================================
Examples:
===================================================

RE:  1. Run the "git pull" command often.

  Note: It is possible to git pull of origin master, being in checking out of other branch

Vlad@openareadesktop MINGW64 ~/Documents/PROGRAMMING/HTML5/GitAWebDeveloperJobUdemy/conflict-example/V-3-V/conflict-example (testfeatureBranch)
$ git pull origin master
From https://github.com/MrV01/conflict-example
 * branch            master     -> FETCH_HEAD
Merge made by the 'recursive' strategy.
 AvoidingGitConflicts.txt | 1 -
 test2.txt                | 1 +
 2 files changed, 1 insertion(+), 1 deletion(-)
 create mode 100644 test2.txt
